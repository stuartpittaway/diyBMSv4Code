; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp8266_d1mini

[env]
framework = arduino
monitor_speed = 115200
;monitor_filters = log2file, default
board_build.flash_mode = dout
extra_scripts = 
        pre:buildscript_versioning.py
        pre:prebuild_compress.py
        pre:prebuild_generate_integrity_hash.py
        pre:prebuild_generate_embedded_files.py

[env:esp8266_d1mini]
; ESP8266 D1 MINI 4M bytes Flash buy from here https://amzn.to/3i1gPIz
; The MINI PRO version also works but is no longer required
; *** ESP8266 CORE for Arduino version 2.7.4
platform = espressif8266
board = d1_mini
upload_protocol = esptool
board_build.mcu = esp8266
board_build.f_cpu = 80000000L
upload_speed=250000
upload_port=COM3
board_build.filesystem = littlefs

platform_packages = 
        platformio/toolchain-xtensa@2.40802.200502
        platformio/framework-arduinoespressif8266

build_flags = 
        -DDEBUG_ESP_PORT=Serial1 
        -mtarget-align 
        -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
        -lstdc++
        -DVTABLES_IN_DRAM
        -D NDEBUG
        -fno-exceptions
        -DCORE_DEBUG_LEVEL=0
        -DCOMMS_BAUD_RATE=2400

; 4MB board
board_build.ldscript = eagle.flash.4m3m.ld
lib_deps =
           https://github.com/SMFSW/Queue.git
           https://github.com/marvinroger/ESP8266TrueRandom.git
           https://github.com/marvinroger/async-mqtt-client.git
           https://github.com/me-no-dev/ESPAsyncWebServer.git
           https://github.com/bblanchon/ArduinoJson.git
           https://github.com/stuartpittaway/SerialEncoder.git
           https://github.com/WereCatf/PCF8574_ESP.git
           https://github.com/PaulStoffregen/Time
           ESPAsyncUDP
           https://github.com/gmag11/NtpClient.git
