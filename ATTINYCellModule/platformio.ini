; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;IMPORTANT YOU USE THE VERSION OF THE MODULE/BOARD YOU ARE COMPILING FOR POSSIBLE VALUES...
;V400 = Original board (marked DIYBMS v4 on silkscreen) - has 8 large resistors (marked 2R20) and likely handsoldered using 0805 sized parts
;                  [4.0 boards do have TP2 near the ATTINY841 chip]
;
;V410 = JLCPCB built board (marked DIYBMS v4 on silkscreen) - has 8 large resistors (marked 2R00) and machine soldered using 0603 sized parts
;                  [4.1 boards do not have TP2 near the ATTINY841 chip]
;
;V420 = JLCPCB built board (marked DIYBMS v4.2 on silkscreen) - has 20 small resistors (marked 6R20) and machine soldered using 0603 sized parts (R20 is in middle of resistor array)
;
;V420_SWAPR19R20 = JLCPCB built board (marked DIYBMS v4.2 on silkscreen) - has 20 small resistors (marked 6R20) and machine soldered using 0603 sized parts
;                  [you have manually resoldered R19 and R20 to swap the positions on PCB to move the thermistor inside the resistor array]
;
;V421 = JLCPCB built board (marked DIYBMS v4.21 on silkscreen) - has 20 small resistors (marked 6R20) and machine soldered using 0603 sized parts (R19 is in middle of resistor array)
;
;V430 = JLCPCB built board (marked DIYBMS v4.3 on silkscreen) - has 20 small resistors (marked 6R20) and machine soldered using 0603 sized parts (R19 is in middle of resistor array)
;                  [Blue LED removed, resetable fuse fitted]
[platformio]
default_envs = attiny841_V400, attiny841_V410, attiny841_V420, attiny841_V420_SWAPR19R20, attiny841_V421, attiny841_V430

[env:attiny841_V400]
platform = atmelavr
board = attiny841
framework = arduino
build_flags=-DDIYBMSMODULEVERSION=400
board_build.f_cpu = 8000000L
board_build.core = tinymodern
lib_deps =
      https://github.com/bakercp/PacketSerial.git
      https://github.com/mike-matera/FastPID.git
upload_protocol = usbasp
; lfuse = 1110 0010 = CKDIV8 & Calibrated Internal 8MHz Oscillator
; hfuse = 1101 0110 = EESAVE & 1.8V BOD detection level
; efuse = 1111 0100 = ULPOSCSEL2/ULPOSCSEL1/ULPOSCSEL0/BODPD1/BODPD0
board_fuses.lfuse = 0b11100010
board_fuses.hfuse = 0b11010110
board_fuses.efuse = 0b11110100
;-B16 option needed for my USBASP programmer to slow it down!
upload_flags =
  -vv
  -B16
  -Pusb
  -Ulfuse:w:0b11100010:m
  -Uhfuse:w:0b11010110:m
  -Uefuse:w:0b11110100:m

[env:attiny841_V410]
platform = atmelavr
board = attiny841
framework = arduino
build_flags=-DDIYBMSMODULEVERSION=410
board_build.f_cpu = 8000000L
board_build.core = tinymodern
lib_deps =
      https://github.com/bakercp/PacketSerial.git
      https://github.com/mike-matera/FastPID.git
upload_protocol = usbasp
; efuse = 1111 0100 = Enables SPM instruction
; hfuse = 1101 0110 = EESAVE & 1.8V BOD detection level
; lfuse = 1110 0010 = CKDIV8 & Calibrated Internal 8MHz Oscillator
board_fuses.lfuse = 0b11100010
board_fuses.hfuse = 0b11010110
board_fuses.efuse = 0b11110100
;-B16 option needed for my USBASP programmer to slow it down!
upload_flags =
  -vv
  -B16
  -Pusb
  -Ulfuse:w:0b11100010:m
  -Uhfuse:w:0b11010110:m
  -Uefuse:w:0b11110100:m

[env:attiny841_V420]
platform = atmelavr
board = attiny841
framework = arduino
build_flags=-DDIYBMSMODULEVERSION=420
board_build.f_cpu = 8000000L
board_build.core = tinymodern
lib_deps =
      https://github.com/bakercp/PacketSerial.git
      https://github.com/mike-matera/FastPID.git
upload_protocol = usbasp
; efuse = 1111 0100 = Enables SPM instruction
; hfuse = 1101 0110 = EESAVE & 1.8V BOD detection level
; lfuse = 1110 0010 = CKDIV8 & Calibrated Internal 8MHz Oscillator
board_fuses.lfuse = 0b11100010
board_fuses.hfuse = 0b11010110
board_fuses.efuse = 0b11110100
;-B16 option needed for my USBASP programmer to slow it down!
upload_flags =
  -vv
  -B16
  -Pusb
  -Ulfuse:w:0b11100010:m
  -Uhfuse:w:0b11010110:m
  -Uefuse:w:0b11110100:m


[env:attiny841_V420_SWAPR19R20]
platform = atmelavr
board = attiny841
framework = arduino
build_flags=-DDIYBMSMODULEVERSION=420 -DSWAPR19R20
board_build.f_cpu = 8000000L
board_build.core = tinymodern
lib_deps =
      https://github.com/bakercp/PacketSerial.git
      https://github.com/mike-matera/FastPID.git
upload_protocol = usbasp
; efuse = 1111 0100 = Enables SPM instruction
; hfuse = 1101 0110 = EESAVE & 1.8V BOD detection level
; lfuse = 1110 0010 = CKDIV8 & Calibrated Internal 8MHz Oscillator
board_fuses.lfuse = 0b11100010
board_fuses.hfuse = 0b11010110
board_fuses.efuse = 0b11110100
;-B16 option needed for my USBASP programmer to slow it down!
upload_flags =
  -vv
  -B16
  -Pusb
  -Ulfuse:w:0b11100010:m
  -Uhfuse:w:0b11010110:m
  -Uefuse:w:0b11110100:m

[env:attiny841_V421]
platform = atmelavr
board = attiny841
framework = arduino
build_flags=-DDIYBMSMODULEVERSION=421
board_build.f_cpu = 8000000L
board_build.core = tinymodern
lib_deps =
      https://github.com/bakercp/PacketSerial.git
      https://github.com/mike-matera/FastPID.git
upload_protocol = usbasp
; efuse = 1111 0100 = Enables SPM instruction
; hfuse = 1101 0110 = EESAVE & 1.8V BOD detection level
; lfuse = 1110 0010 = CKDIV8 & Calibrated Internal 8MHz Oscillator
board_fuses.lfuse = 0b11100010
board_fuses.hfuse = 0b11010110
board_fuses.efuse = 0b11110100
;-B16 option needed for my USBASP programmer to slow it down!
; avrdude: safemode: Fuses OK (E:F4, H:D6, L:E2)
upload_flags =
  -vv
  -B16
  -Pusb
  -Ulfuse:w:0b11100010:m
  -Uhfuse:w:0b11010110:m
  -Uefuse:w:0b11110100:m

[env:attiny841_V430]
platform = atmelavr
board = attiny841
framework = arduino
;Need to remove  -DSWAPR19R20 before final version
build_flags=-DDIYBMSMODULEVERSION=430 -DSWAPR19R20
board_build.f_cpu = 8000000L
board_build.core = tinymodern
lib_deps =
      https://github.com/bakercp/PacketSerial.git
      https://github.com/mike-matera/FastPID.git
upload_protocol = usbasp

; lfuse = 1111 1100 = CKDIV8/CKOUT/NA/SUT/CKSEL =   0/1/1/0/1100 = 3-8Mhz
; hfuse = 1101 0110 = EESAVE & 1.8V BOD detection level
; efuse = 1111 0100 = Enables SPM instruction
board_fuses.lfuse = 0b11111100
board_fuses.hfuse = 0b11010110
board_fuses.efuse = 0b11110100
;-B16 option needed for my USBASP programmer to slow it down!

; USES EXTERNAL 8MHZ CRYSTAL INSTEAD OF INBUILT OSC
upload_flags =
  -vv
  -Pusb
  -B11
  -Ulfuse:w:0b11111100:m 
  -Uhfuse:w:0b11010110:m 
  -Uefuse:w:0b11110100:m 

